@startuml{sequence.png}
title sequence of scenario test runner

actor scenario_writer

scenario_writer -> ros2launch : write workflow yaml\nfile and describe test.
ros2launch -> scenario_test_runner : launch test runner
ros2launch -> openscenario_interpreter_node : launch openscenario interpreter
ros2launch -> simulator : launch simulator

scenario_test_runner -> scenario_test_runner : load and validate\nworkflow yaml file
scenario_test_runner -> Autoware : launch autoware.
loop run single test case
    scenario_test_runner -> scenario_test_runner : resolve path in workflow file\nand generate/validate .xosc files.

    openscenario_interpreter_node -> scenario_test_runner: become unconfigured status
    scenario_test_runner -> openscenario_interpreter_node:configure

    openscenario_interpreter_node -> openscenario_interpreter_node: resolve path of the\nlanelet2 map and load it.
    openscenario_interpreter_node -> Autoware : send lanelet2 map via ROS 2 topic.

    openscenario_interpreter_node -> simulator: initialize via ZeroMQ
    simulator -> openscenario_interpreter_node: response to initialize\nvia ZeroMQ

    loop until the simulation was finished
        openscenario_interpreter_node -> simulator: update simulation frame\nvia ZeroMQ
        simulator -> Autoware: send sensor data via ROS 2 topic.
        Autoware -> simulator: send vehicle command via ROS 2 topic.
        openscenario_interpreter_node <-- simulator: response to update simulation\nframe via ZeroMQ
    end
    openscenario_interpreter_node -> scenario_writer : output test result as junit file
end

@enduml
