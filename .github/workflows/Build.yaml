name: BuildTest

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *
  pull_request:
    paths:
      - '**'
      - '!docs/**'
      - '!README.md'
      - '!.github/**'
      - '.github/workflows/Build.yaml'
      - '!mkdocs.yml'

jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    timeout-minutes: 180
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        rosdistro: [galactic, humble]
        include:
          # Galactic Geochelone (May 2021 - November 2022)
          - docker_image: rostooling/setup-ros-docker:ubuntu-focal-ros-galactic-ros-base-latest
            rosdistro: galactic
          # Humble Hawksbill (May 2022 - May 2027)
          - docker_image: rostooling/setup-ros-docker:ubuntu-jammy-ros-humble-ros-base-latest
            rosdistro: humble
    env:
      ROS_DISTRO: ${{ matrix.rosdistro }}
    container:
      image: ${{ matrix.docker_image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: workaround for jammy
        if: ${{ matrix.rosdistro == 'humble' }}
        run: |
          apt remove libunwind-14-dev -y
          apt install python3-nose -y
          pip uninstall nose -y
      - name: Search packages in this repository
        id: list_packages
        run: |
          echo ::set-output name=package_list::$(colcon list --names-only | sed -e ':loop; N; $!b loop; s/\n/ /g')
      - name: Show target packages
        run: |
          echo "Target packages: ${{ steps.list_packages.outputs.package_list }}"
      - name: Run build test
        uses: ros-tooling/action-ros-ci@v0.2
        with:
          package-name: ${{ steps.list_packages.outputs.package_list }}
          target-ros2-distro: ${{ matrix.rosdistro }}
          vcs-repo-file-url: dependency_${{ matrix.rosdistro }}.repos
          extra-cmake-args: -DBUILD_CPP_MOCK_SCENARIOS=ON
          colcon-defaults: |
            {
              "build": {
                "mixin": ["coverage-gcc", "coverage-pytest"]
              },
              "test": {
                "mixin": ["coverage-pytest"]
              }
            }
          # If possible, pin the repository in the workflow to a specific commit to avoid
          # changes in colcon-mixin-repository from breaking your tests.
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml
      - name: show failure test result
        if: always()
        run : |
          cd /__w/scenario_simulator_v2/scenario_simulator_v2/ros_ws
          colcon test-result --verbose
      - name: publish codecov result
        uses: codecov/codecov-action@v1.2.1
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # only needed for private repos
          files: ros_ws/lcov/total_coverage.info,ros_ws/coveragepy/.coverage
          flags: colcon_test
          env_vars: ROS_DISTRO
      - name: collect test result
        if: always()
        run: |
          cd /__w/scenario_simulator_v2/scenario_simulator_v2/ros_ws/build
          find -name test_results | xargs -i cp -r -p {} .
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test_results
          path: /home/runner/work/scenario_simulator_v2/scenario_simulator_v2/ros_ws/build/test_results
