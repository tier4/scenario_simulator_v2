name: BuildIsolateTest

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *
  push:
    branches:
      - master

jobs:
  build_isolate:
    name: build_isolate
    runs-on: ubuntu-20.04
    timeout-minutes: 90
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        package:
          [
            behavior_tree_plugin,
            concealer,
            cpp_mock_scenarios,
            kashiwanoha_map,
            lanelet2_extension_psim,
            lanelet2_matching,
            openscenario_interpreter,
            openscenario_interpreter_example,
            openscenario_interpreter_msgs,
            openscenario_msgs,
            openscenario_utility,
            openscenario_visualization,
            random_test_runner,
            scenario_simulator_exception,
            scenario_simulator_v2,
            scenario_test_runner,
            simple_junit,
            simple_sensor_simulator,
            simulation_interface,
            traffic_simulator,
            traffic_simulator_msgs,
            user_defined_value_condition_example,
          ]
        rosdistro: [galactic, humble]
        include:
          # Galactic Geochelone (May 2021 - November 2022)
          - docker_image: rostooling/setup-ros-docker:ubuntu-focal-ros-galactic-ros-base-latest
            rosdistro: galactic
          # Humble Hawksbill (May 2022 - May 2027)
          - docker_image: rostooling/setup-ros-docker:ubuntu-jammy-ros-humble-ros-base-latest
            rosdistro: humble
    env:
      ROS_DISTRO: ${{ matrix.rosdistro }}
    container:
      image: ${{ matrix.docker_image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: workaround for jammy
        if: ${{ matrix.rosdistro == 'humble' }}
        run: |
          apt remove libunwind-14-dev -y
          apt install python3-nose -y
          pip uninstall nose -y
      - name: Run build test for ${{ matrix.package }} package
        uses: ros-tooling/action-ros-ci@v0.2
        with:
          package-name: ${{ matrix.package }}
          target-ros2-distro: ${{ matrix.rosdistro }}
          vcs-repo-file-url: dependency_${{ matrix.rosdistro }}.repos
          extra-cmake-args: -DWITH_INTEGRATION_TEST=ON
          colcon-defaults: |
            {
              "build": {
                "mixin": ["coverage-gcc", "coverage-pytest"]
              },
              "test": {
                "mixin": ["coverage-pytest"]
              }
            }
          # If possible, pin the repository in the workflow to a specific commit to avoid
          # changes in colcon-mixin-repository from breaking your tests.
          colcon-mixin-repository: https://raw.githubusercontent.com/colcon/colcon-mixin-repository/1ddb69bedfd1f04c2f000e95452f7c24a4d6176b/index.yaml
      - name: publish codecov result
        uses: codecov/codecov-action@v1.2.1
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # only needed for private repos
          files: ros_ws/lcov/total_coverage.info,ros_ws/coveragepy/.coverage
          flags: colcon_test
          env_vars: ROS_DISTRO
          name: ${{ matrix.package }}
